/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogLista.java
 *
 * Created on 21/04/2011, 16:44:40
 */

package siscadfj.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import siscadfj.controller.HabilidadeBD;
import siscadfj.controller.SocioBD;
import siscadfj.model.Socio;


/**
 *
 * @author stevao
 */
public class JDialogLista extends javax.swing.JDialog {

    /** Creates new form JDialogLista */
    public JDialogLista(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        iniciar();
        getDataTableSocio();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonFechar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaSocio = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Socios - SISCadFJ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonFechar.setText("Alterar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jTableListaSocio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Matrícula", "Função", "Bloco"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableListaSocio);

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(258, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFechar)
                    .addComponent(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-785)/2, (screenSize.height-438)/2, 785, 438);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        // TODO add your handling code here:

        int i = JOptionPane.showConfirmDialog(this, "Deseja alterar os dados do socio?", "Fechar", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_NO_OPTION) {
        SocioBD socioAlterado = new SocioBD();

        socioAlterado.inserirSocioAlterado(insereSocioTableAlterados());


        JDialogAtualizar dialogAtualizar =new JDialogAtualizar(null,true);
        dialogAtualizar.setVisible(true);
        this.setVisible(false);
        }
        
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        int i = JOptionPane.showConfirmDialog(this, "Deseja excluir socio selecionado?", "Atenção!", JOptionPane.YES_NO_OPTION);

        if(i == 0){

            excluiSocioTable();
            JOptionPane.showMessageDialog(this, "Socio excluido!", "Alerta", JOptionPane.INFORMATION_MESSAGE);
        }

        else
            JOptionPane.showMessageDialog(this, "Exclusão cancelada!", "Alerta", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogLista dialog = new JDialogLista(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListaSocio;
    // End of variables declaration//GEN-END:variables

    private void iniciar(){
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setModal(true);
        this.setResizable(false);
    }

    private void getDataTableSocio() {
        int i;
        DefaultTableModel model=(DefaultTableModel)jTableListaSocio.getModel();

        
        // atribui 0 linhas à coluna
        model.setNumRows(0);

        // atribui um tamanho fixo a coluna codigo
        jTableListaSocio.getColumnModel().getColumn(0).setPreferredWidth(2);

        ArrayList<Socio> listSocio = new ArrayList<Socio>();
        listSocio = new SocioBD().getListaSocio();
        
        //adiciona socios às tabelas
        for (i=0;i<=listSocio.size()-1;i++){
            model.addRow(new Object[]{listSocio.get(i).getNome(),listSocio.get(i).getMatricula(),
            listSocio.get(i).getFuncao(),listSocio.get(i).getBloco()});
        }
    }

    private void excluiSocioTable(){

        //Objeto Socio que vai ser excluido
        Socio socio = new Socio();
        
        //Pegando o nome do socio da linha selecionada
        String nomeSocio = (String)jTableListaSocio.getValueAt(jTableListaSocio.getSelectedRow(), 0);

        //Inserindo nome no objeto que vai ser excluido
        socio.setNome(nomeSocio);

        ////Criando Objeto HabilidadeBD que chama a função excluir habilidade
        HabilidadeBD habilidadeBD = new HabilidadeBD();

        //Excluindo habilidades antes do socio
        habilidadeBD.excluirSocioHab(socio);

        //Criando Objeto SocioBD que chama a função excluir socio
        SocioBD socioBD = new SocioBD();

        //Excluindo socio do banco com nome igual ao selecionado da lista.
        socioBD.excluirSocio(socio);

        //Modelo da tabela para remover a linha do usuario excluido no banco
        DefaultTableModel model=(DefaultTableModel)jTableListaSocio.getModel();

        //Excluindo a linha selecionada da tabela
        model.removeRow(jTableListaSocio.getSelectedRow());

    }

        private Socio insereSocioTableAlterados(){

        //Objeto Socio que vai ser inserido
        Socio socio = new Socio();
        
        //Pegando o nome do socio da linha selecionada
        String nomeSocio = (String)jTableListaSocio.getValueAt(jTableListaSocio.getSelectedRow(), 0);

        //Inserindo nome no objeto que vai ser inserido na tabela alterados
        socio.setNome(nomeSocio);

        ////Criando Objeto HabilidadeBD que chama a função excluir habilidade
//        HabilidadeBD habilidadeBD = new HabilidadeBD();

        //Excluindo habilidades antes do socio
//        habilidadeBD.excluirSocioHab(socio);

        return socio;

    }


}


